{"status":"Failed","policy":{"name":"Webhooks","description":""},"findingKey":"AfbCLHf5GYx0ywdJ6sMCFg","findingId":"AfbCLHf5GYx0ywdJ6sMCFg","cloudGuardAccountId":"51722","origin":"Compliance Engine","bundle":{"name":"CIS Kubernetes Benchmark v1.6.1","description":"Automated Validation of Kubernetes CIS Benchmark v1.6.1 Prescriptive guidance for establishing a secure configuration posture for Kubernetes 1.6.1\nFor additional reference: https://www.cisecurity.org/benchmark/kubernetes/","id":-70},"reportTime":"2023-06-09T11:00:31.243Z","rule":{"name":"Apply Security Context to Your Pods and Containers","ruleId":"D9.K8S.OPE.06","description":"Apply Security Context to Your Pods and Containers. A security context defines the operating system security settings (uid, gid, capabilities, SELinux role, etc..) applied to a container. When designing your containers and pods, make sure that you configure the security context for your pods, containers, and volumes. A security context is a property defined in the deployment yaml. It controls the security parameters that will be assigned to the pod/container/volume.","remediation":"Follow the Kubernetes documentation and apply security contexts to your pods. For a suggested list of security contexts, you may refer to the CIS Security Benchmark for Docker Containers.\n**References**\nhttps://kubernetes.io/docs/concepts/policy/security-context/","complianceTags":"5.6.3","logicHash":"IESpWUCb45AmMIPF+zZBxA","severity":"Low"},"account":{"id":"5af13ab5-72ed-43b6-9544-33c9236d62f0","name":"nu-openshift-cluster","vendor":"Kubernetes","dome9CloudAccountId":"5af13ab5-72ed-43b6-9544-33c9236d62f0","organizationalUnitId":"00000000-0000-0000-0000-000000000000","organizationalUnitPath":""},"region":"Global","entity":{"spec":{"affinity":null,"containers":[{"args":["timeout 3m /bin/bash -exuo pipefail -c 'while [ -n \"$(ss -Htanop \\( sport = 10257 \\))\" ]; do sleep 1; done'\n\nif [ -f /etc/kubernetes/static-pod-certs/configmaps/trusted-ca-bundle/ca-bundle.crt ]; then\n  echo \"Copying system trust bundle\"\n  cp -f /etc/kubernetes/static-pod-certs/configmaps/trusted-ca-bundle/ca-bundle.crt /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem\nfi\n\nif [ -f /etc/kubernetes/static-pod-resources/configmaps/cloud-config/ca-bundle.pem ]; then\n  echo \"Setting custom CA bundle for cloud provider\"\n  export AWS_CA_BUNDLE=/etc/kubernetes/static-pod-resources/configmaps/cloud-config/ca-bundle.pem\nfi\n\nexec hyperkube kube-controller-manager --openshift-config=/etc/kubernetes/static-pod-resources/configmaps/config/config.yaml \\\n  --kubeconfig=/etc/kubernetes/static-pod-resources/configmaps/controller-manager-kubeconfig/kubeconfig \\\n  --authentication-kubeconfig=/etc/kubernetes/static-pod-resources/configmaps/controller-manager-kubeconfig/kubeconfig \\\n  --authorization-kubeconfig=/etc/kubernetes/static-pod-resources/configmaps/controller-manager-kubeconfig/kubeconfig \\\n  --client-ca-file=/etc/kubernetes/static-pod-certs/configmaps/client-ca/ca-bundle.crt \\\n  --requestheader-client-ca-file=/etc/kubernetes/static-pod-certs/configmaps/aggregator-client-ca/ca-bundle.crt -v=2 --tls-cert-file=/etc/kubernetes/static-pod-resources/secrets/serving-cert/tls.crt --tls-private-key-file=/etc/kubernetes/static-pod-resources/secrets/serving-cert/tls.key --allocate-node-cidrs=false --cert-dir=/var/run/kubernetes --cluster-cidr=10.128.0.0/14 --cluster-name=openshift-csa-brwvf --cluster-signing-cert-file=/etc/kubernetes/static-pod-certs/secrets/csr-signer/tls.crt --cluster-signing-duration=720h --cluster-signing-key-file=/etc/kubernetes/static-pod-certs/secrets/csr-signer/tls.key --configure-cloud-routes=false --controllers=* --controllers=-bootstrapsigner --controllers=-tokencleaner --controllers=-ttl --enable-dynamic-provisioning=true --feature-gates=APIPriorityAndFairness=true --feature-gates=CSIMigrationAWS=false --feature-gates=CSIMigrationAzureFile=false --feature-gates=CSIMigrationGCE=false --feature-gates=CSIMigrationvSphere=false --feature-gates=DownwardAPIHugePages=true --feature-gates=PodSecurity=true --feature-gates=RotateKubeletServerCertificate=true --flex-volume-plugin-dir=/etc/kubernetes/kubelet-plugins/volume/exec --kube-api-burst=300 --kube-api-qps=150 --leader-elect-resource-lock=configmapsleases --leader-elect-retry-period=3s --leader-elect=true --pv-recycler-pod-template-filepath-hostpath=/etc/kubernetes/static-pod-resources/configmaps/recycler-config/recycler-pod.yaml --pv-recycler-pod-template-filepath-nfs=/etc/kubernetes/static-pod-resources/configmaps/recycler-config/recycler-pod.yaml --root-ca-file=/etc/kubernetes/static-pod-resources/configmaps/serviceaccount-ca/ca-bundle.crt --secure-port=10257 --service-account-private-key-file=/etc/kubernetes/static-pod-resources/secrets/service-account-private-key/service-account.key --service-cluster-ip-range=172.30.0.0/16 --use-service-account-credentials=true --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256 --tls-min-version=VersionTLS12"],"command":["/bin/bash","-euxo","pipefail","-c"],"env":null,"image":"quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:7dd9070ddd5c6d877e6431af587973c39f97f753f2c504b43c4841d5ac3f3733","livenessProbe":{"exec":null,"failureThreshold":3,"httpGet":{"host":null,"path":"healthz","port":"10257","scheme":"HTTPS","httpHeaders":null},"initialDelaySeconds":45,"periodSeconds":10,"successThreshold":1,"tcpSocket":null,"timeoutSeconds":10},"name":"kube-controller-manager","imageDetails":{"registry":"quay.io/openshift-release-dev","repository":"ocp-v4.0-art-dev","tag":"sha256:7dd9070ddd5c6d877e6431af587973c39f97f753f2c504b43c4841d5ac3f3733"},"parsedArgs":[{"key":"euxo","value":"pipefail"},{"key":"c","value":"timeout 3m /bin/bash"},{"key":"exuo","value":"pipefail"},{"key":"c","value":"'while ["},{"key":"n","value":"\"$(ss"},{"key":"Htanop","value":"\\( sport = 10257 \\))\" ]; do sleep 1; done'if ["},{"key":"f","value":"/etc/kubernetes/static-pod-certs/configmaps/trusted-ca-bundle/ca-bundle.crt ]; then  echo \"Copying system trust bundle\"  cp"},{"key":"f","value":"/etc/kubernetes/static-pod-certs/configmaps/trusted-ca-bundle/ca-bundle.crt /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pemfiif ["},{"key":"f","value":"/etc/kubernetes/static-pod-resources/configmaps/cloud-config/ca-bundle.pem ]; then  echo \"Setting custom CA bundle for cloud provider\"  export AWS_CA_BUNDLE=/etc/kubernetes/static-pod-resources/configmaps/cloud-config/ca-bundle.pemfiexec hyperkube kube-controller-manager"},{"key":"openshift-config","value":"/etc/kubernetes/static-pod-resources/configmaps/config/config.yaml \\ "},{"key":"kubeconfig","value":"/etc/kubernetes/static-pod-resources/configmaps/controller-manager-kubeconfig/kubeconfig \\ "},{"key":"authentication-kubeconfig","value":"/etc/kubernetes/static-pod-resources/configmaps/controller-manager-kubeconfig/kubeconfig \\ "},{"key":"authorization-kubeconfig","value":"/etc/kubernetes/static-pod-resources/configmaps/controller-manager-kubeconfig/kubeconfig \\ "},{"key":"client-ca-file","value":"/etc/kubernetes/static-pod-certs/configmaps/client-ca/ca-bundle.crt \\ "},{"key":"requestheader-client-ca-file","value":"/etc/kubernetes/static-pod-certs/configmaps/aggregator-client-ca/ca-bundle.crt"},{"key":"v","value":"2"},{"key":"tls-cert-file","value":"/etc/kubernetes/static-pod-resources/secrets/serving-cert/tls.crt"},{"key":"tls-private-key-file","value":"/etc/kubernetes/static-pod-resources/secrets/serving-cert/tls.key"},{"key":"allocate-node-cidrs","value":"false"},{"key":"cert-dir","value":"/var/run/kubernetes"},{"key":"cluster-cidr","value":"10.128.0.0/14"},{"key":"cluster-name","value":"openshift-csa-brwvf"},{"key":"cluster-signing-cert-file","value":"/etc/kubernetes/static-pod-certs/secrets/csr-signer/tls.crt"},{"key":"cluster-signing-duration","value":"720h"},{"key":"cluster-signing-key-file","value":"/etc/kubernetes/static-pod-certs/secrets/csr-signer/tls.key"},{"key":"configure-cloud-routes","value":"false"},{"key":"controllers","value":"*"},{"key":"controllers","value":"-bootstrapsigner"},{"key":"controllers","value":"-tokencleaner"},{"key":"controllers","value":"-ttl"},{"key":"enable-dynamic-provisioning","value":"true"},{"key":"feature-gates","value":"APIPriorityAndFairness=true"},{"key":"feature-gates","value":"CSIMigrationAWS=false"},{"key":"feature-gates","value":"CSIMigrationAzureFile=false"},{"key":"feature-gates","value":"CSIMigrationGCE=false"},{"key":"feature-gates","value":"CSIMigrationvSphere=false"},{"key":"feature-gates","value":"DownwardAPIHugePages=true"},{"key":"feature-gates","value":"PodSecurity=true"},{"key":"feature-gates","value":"RotateKubeletServerCertificate=true"},{"key":"flex-volume-plugin-dir","value":"/etc/kubernetes/kubelet-plugins/volume/exec"},{"key":"kube-api-burst","value":"300"},{"key":"kube-api-qps","value":"150"},{"key":"leader-elect-resource-lock","value":"configmapsleases"},{"key":"leader-elect-retry-period","value":"3s"},{"key":"leader-elect","value":"true"},{"key":"pv-recycler-pod-template-filepath-hostpath","value":"/etc/kubernetes/static-pod-resources/configmaps/recycler-config/recycler-pod.yaml"},{"key":"pv-recycler-pod-template-filepath-nfs","value":"/etc/kubernetes/static-pod-resources/configmaps/recycler-config/recycler-pod.yaml"},{"key":"root-ca-file","value":"/etc/kubernetes/static-pod-resources/configmaps/serviceaccount-ca/ca-bundle.crt"},{"key":"secure-port","value":"10257"},{"key":"service-account-private-key-file","value":"/etc/kubernetes/static-pod-resources/secrets/service-account-private-key/service-account.key"},{"key":"service-cluster-ip-range","value":"172.30.0.0/16"},{"key":"use-service-account-credentials","value":"true"},{"key":"tls-cipher-suites","value":"TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256"},{"key":"tls-min-version","value":"VersionTLS12"}],"ports":[{"containerPort":10257,"hostIP":null,"hostPort":10257,"name":null,"protocol":"TCP"}],"readinessProbe":{"exec":null,"failureThreshold":3,"httpGet":{"host":null,"path":"healthz","port":"10257","scheme":"HTTPS","httpHeaders":null},"initialDelaySeconds":10,"periodSeconds":10,"successThreshold":1,"tcpSocket":null,"timeoutSeconds":10},"resources":{"limits":null,"requests":{"memory":"200Mi","cpu":"60m"}},"securityContext":null,"volumeMounts":[{"name":"resource-dir","mountPath":"/etc/kubernetes/static-pod-resources","readOnly":false,"mountPropagation":null,"subPath":null,"subPathExpr":null},{"name":"cert-dir","mountPath":"/etc/kubernetes/static-pod-certs","readOnly":false,"mountPropagation":null,"subPath":null,"subPathExpr":null}]},{"args":["timeout 3m /bin/bash -exuo pipefail -c 'while [ -n \"$(ss -Htanop \\( sport = 10357 \\))\" ]; do sleep 1; done'\n\nexec cluster-policy-controller start --config=/etc/kubernetes/static-pod-resources/configmaps/cluster-policy-controller-config/config.yaml \\\n  --kubeconfig=/etc/kubernetes/static-pod-resources/configmaps/controller-manager-kubeconfig/kubeconfig \\\n  --namespace=${POD_NAMESPACE} -v=2"],"command":["/bin/bash","-euxo","pipefail","-c"],"env":[{"name":"POD_NAME","value":null,"valueFrom":{"secretKeyRef":null}},{"name":"POD_NAMESPACE","value":null,"valueFrom":{"secretKeyRef":null}}],"image":"quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:c6b70f5c817914c1edfd8a193ad6f74dacc1ee3e25b7a18bfdbf7d289d7f04d6","livenessProbe":{"exec":null,"failureThreshold":3,"httpGet":{"host":null,"path":"healthz","port":"10357","scheme":"HTTPS","httpHeaders":null},"initialDelaySeconds":45,"periodSeconds":10,"successThreshold":1,"tcpSocket":null,"timeoutSeconds":10},"name":"cluster-policy-controller","imageDetails":{"registry":"quay.io/openshift-release-dev","repository":"ocp-v4.0-art-dev","tag":"sha256:c6b70f5c817914c1edfd8a193ad6f74dacc1ee3e25b7a18bfdbf7d289d7f04d6"},"parsedArgs":[{"key":"euxo","value":"pipefail"},{"key":"c","value":"timeout 3m /bin/bash"},{"key":"exuo","value":"pipefail"},{"key":"c","value":"'while ["},{"key":"n","value":"\"$(ss"},{"key":"Htanop","value":"\\( sport = 10357 \\))\" ]; do sleep 1; done'exec cluster-policy-controller start"},{"key":"config","value":"/etc/kubernetes/static-pod-resources/configmaps/cluster-policy-controller-config/config.yaml \\ "},{"key":"kubeconfig","value":"/etc/kubernetes/static-pod-resources/configmaps/controller-manager-kubeconfig/kubeconfig \\ "},{"key":"namespace","value":"${POD_NAMESPACE}"},{"key":"v","value":"2"}],"ports":[{"containerPort":10357,"hostIP":null,"hostPort":10357,"name":null,"protocol":"TCP"}],"readinessProbe":{"exec":null,"failureThreshold":3,"httpGet":{"host":null,"path":"healthz","port":"10357","scheme":"HTTPS","httpHeaders":null},"initialDelaySeconds":10,"periodSeconds":10,"successThreshold":1,"tcpSocket":null,"timeoutSeconds":10},"resources":{"limits":null,"requests":{"memory":"200Mi","cpu":"10m"}},"securityContext":null,"volumeMounts":[{"name":"resource-dir","mountPath":"/etc/kubernetes/static-pod-resources","readOnly":false,"mountPropagation":null,"subPath":null,"subPathExpr":null},{"name":"cert-dir","mountPath":"/etc/kubernetes/static-pod-certs","readOnly":false,"mountPropagation":null,"subPath":null,"subPathExpr":null}]},{"args":["--kubeconfig=/etc/kubernetes/static-pod-resources/configmaps/kube-controller-cert-syncer-kubeconfig/kubeconfig","--namespace=$(POD_NAMESPACE)","--destination-dir=/etc/kubernetes/static-pod-certs"],"command":["cluster-kube-controller-manager-operator","cert-syncer"],"env":[{"name":"POD_NAME","value":null,"valueFrom":{"secretKeyRef":null}},{"name":"POD_NAMESPACE","value":null,"valueFrom":{"secretKeyRef":null}}],"image":"quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a61cb5fb5e920488ce4790d78c6bc6f7b6170be9696c38e171bb56cf80bce14d","livenessProbe":null,"name":"kube-controller-manager-cert-syncer","imageDetails":{"registry":"quay.io/openshift-release-dev","repository":"ocp-v4.0-art-dev","tag":"sha256:a61cb5fb5e920488ce4790d78c6bc6f7b6170be9696c38e171bb56cf80bce14d"},"parsedArgs":[{"key":"kube-controller-manager-operator","value":"cert-syncer"},{"key":"kubeconfig","value":"/etc/kubernetes/static-pod-resources/configmaps/kube-controller-cert-syncer-kubeconfig/kubeconfig"},{"key":"namespace","value":"$(POD_NAMESPACE)"},{"key":"destination-dir","value":"/etc/kubernetes/static-pod-certs"}],"ports":null,"readinessProbe":null,"resources":{"limits":null,"requests":{"memory":"50Mi","cpu":"5m"}},"securityContext":null,"volumeMounts":[{"name":"resource-dir","mountPath":"/etc/kubernetes/static-pod-resources","readOnly":false,"mountPropagation":null,"subPath":null,"subPathExpr":null},{"name":"cert-dir","mountPath":"/etc/kubernetes/static-pod-certs","readOnly":false,"mountPropagation":null,"subPath":null,"subPathExpr":null}]},{"args":["timeout 3m /bin/bash -exuo pipefail -c 'while [ -n \"$(ss -Htanop \\( sport = 9443 \\))\" ]; do sleep 1; done'\n\nexec cluster-kube-controller-manager-operator cert-recovery-controller --kubeconfig=/etc/kubernetes/static-pod-resources/configmaps/kube-controller-cert-syncer-kubeconfig/kubeconfig --namespace=${POD_NAMESPACE} --listen=0.0.0.0:9443 -v=2"],"command":["/bin/bash","-euxo","pipefail","-c"],"env":[{"name":"POD_NAMESPACE","value":null,"valueFrom":{"secretKeyRef":null}}],"image":"quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a61cb5fb5e920488ce4790d78c6bc6f7b6170be9696c38e171bb56cf80bce14d","livenessProbe":null,"name":"kube-controller-manager-recovery-controller","imageDetails":{"registry":"quay.io/openshift-release-dev","repository":"ocp-v4.0-art-dev","tag":"sha256:a61cb5fb5e920488ce4790d78c6bc6f7b6170be9696c38e171bb56cf80bce14d"},"parsedArgs":[{"key":"euxo","value":"pipefail"},{"key":"c","value":"timeout 3m /bin/bash"},{"key":"exuo","value":"pipefail"},{"key":"c","value":"'while ["},{"key":"n","value":"\"$(ss"},{"key":"Htanop","value":"\\( sport = 9443 \\))\" ]; do sleep 1; done'exec cluster-kube-controller-manager-operator cert-recovery-controller"},{"key":"kubeconfig","value":"/etc/kubernetes/static-pod-resources/configmaps/kube-controller-cert-syncer-kubeconfig/kubeconfig"},{"key":"namespace","value":"${POD_NAMESPACE}"},{"key":"listen","value":"0.0.0.0:9443"},{"key":"v","value":"2"}],"ports":null,"readinessProbe":null,"resources":{"limits":null,"requests":{"memory":"50Mi","cpu":"5m"}},"securityContext":null,"volumeMounts":[{"name":"resource-dir","mountPath":"/etc/kubernetes/static-pod-resources","readOnly":false,"mountPropagation":null,"subPath":null,"subPathExpr":null},{"name":"cert-dir","mountPath":"/etc/kubernetes/static-pod-certs","readOnly":false,"mountPropagation":null,"subPath":null,"subPathExpr":null}]}],"dnsConfig":null,"hostAliases":null,"hostIPC":false,"hostNetwork":true,"hostPID":false,"initContainers":null,"nodeInfo":{"conditions":[{"message":"kubelet has sufficient memory available","reason":"KubeletHasSufficientMemory","status":"False","type":"MemoryPressure"},{"message":"kubelet has no disk pressure","reason":"KubeletHasNoDiskPressure","status":"False","type":"DiskPressure"},{"message":"kubelet has sufficient PID available","reason":"KubeletHasSufficientPID","status":"False","type":"PIDPressure"},{"message":"kubelet is posting ready status","reason":"KubeletReady","status":"True","type":"Ready"}],"labels":[{"key":"beta.kubernetes.io/arch","value":"amd64"},{"key":"beta.kubernetes.io/os","value":"linux"},{"key":"kubernetes.io/arch","value":"amd64"},{"key":"kubernetes.io/hostname","value":"control-1.demoenv.local"},{"key":"kubernetes.io/os","value":"linux"},{"key":"node-role.kubernetes.io/master","value":""},{"key":"node.openshift.io/os_id","value":"rhcos"}]},"nodeName":"control-1.demoenv.local","priority":2000001000,"priorityClassName":"system-node-critical","securityContext":{"fsGroup":null,"runAsGroup":null,"runAsNonRoot":null,"runAsUser":null,"seLinuxOptions":null,"supplementalGroups":null,"sysctls":null,"windowsOptions":null,"seccompProfile":null},"serviceAccount":null,"serviceAccountName":null,"tolerations":[{"key":null,"operator":"Exists","effect":null}],"volumes":[{"hostPath":{"path":"/etc/kubernetes/static-pod-resources/kube-controller-manager-pod-12","type":""},"flexVolume":null,"name":"resource-dir","persistentVolumeClaim":null},{"hostPath":{"path":"/etc/kubernetes/static-pod-resources/kube-controller-manager-certs","type":""},"flexVolume":null,"name":"cert-dir","persistentVolumeClaim":null}]},"status":{"phase":"Running","podIP":"192.168.10.11"},"networkPolicies":{"ingress":[],"egress":[]},"owner":{"ownerReferences":[{"kind":"Node","uid":"abddf8bc-d0d0-42d8-9b1f-8dbe92ca0cbe","name":"control-1.demoenv.local"}],"rootOwner":{"kind":"Node","uid":"abddf8bc-d0d0-42d8-9b1f-8dbe92ca0cbe","name":"control-1.demoenv.local"}},"tags":[{"key":"app","value":"kube-controller-manager"},{"key":"kube-controller-manager","value":"true"},{"key":"revision","value":"12"}],"namespace":"openshift-kube-controller-manager","annotations":[{"key":"kubectl.kubernetes.io/default-container","value":"kube-controller-manager"},{"key":"kubernetes.io/config.hash","value":"13f1afd769801871c70a8c7ebe9a0c48"},{"key":"kubernetes.io/config.mirror","value":"13f1afd769801871c70a8c7ebe9a0c48"},{"key":"kubernetes.io/config.seen","value":"2022-12-21T04:10:45.163313510Z"},{"key":"kubernetes.io/config.source","value":"file"},{"key":"target.workload.openshift.io/management","value":"{\"effect\": \"PreferredDuringScheduling\"}"}],"labels":[{"key":"app","value":"kube-controller-manager"},{"key":"kube-controller-manager","value":"true"},{"key":"revision","value":"12"}],"creationTime":1671595859,"id":"a11f02a1-abc9-422b-80a4-c44072eb0e19","type":"KubernetesPod","name":"kube-controller-manager-control-1.demoenv.local","dome9Id":"11|5af13ab5-72ed-43b6-9544-33c9236d62f0|Pod|a11f02a1-abc9-422b-80a4-c44072eb0e19","accountNumber":"5af13ab5-72ed-43b6-9544-33c9236d62f0","assetLabels":null,"region":"Global","externalFindings":null},"remediationActions":[],"action":"Detect","additionalFields":[]}