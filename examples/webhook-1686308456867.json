{"status":"Failed","policy":{"name":"Webhooks","description":""},"findingKey":"5/5Jv97JVlB2wWvYw6kk2A","findingId":"5/5Jv97JVlB2wWvYw6kk2A","cloudGuardAccountId":"51722","origin":"Compliance Engine","bundle":{"name":"CIS Kubernetes Benchmark v1.6.1","description":"Automated Validation of Kubernetes CIS Benchmark v1.6.1 Prescriptive guidance for establishing a secure configuration posture for Kubernetes 1.6.1\nFor additional reference: https://www.cisecurity.org/benchmark/kubernetes/","id":-70},"reportTime":"2023-06-09T11:00:31.243Z","rule":{"name":"Ensure that the seccomp profile is set to docker/default in your pod definitions","ruleId":"D9.K8S.IAM.21","description":"Seccomp (secure computing mode) is used to restrict the set of system calls applications can make, allowing cluster administrators greater control over the security of workloads running in the cluster. Kubernetes disables seccomp profiles by default for historical reasons. You should enable it to ensure that the workloads have restricted actions available within the container.","remediation":"Use security context to enable the docker/default seccomp profile in your pod definitions.\n\n**References**\n1. https://github.com/kubernetes/kubernetes/issues/39845\n2. https://github.com/kubernetes/kubernetes/pull/21790\n3. https://github.com/kubernetes/community/blob/master/contributors/design-proposals/seccomp.md#examples\n4. https://docs.docker.com/engine/security/seccomp/","complianceTags":"5.6.2","logicHash":"wat89y5RGQIVJriupbowlQ","severity":"High"},"account":{"id":"5af13ab5-72ed-43b6-9544-33c9236d62f0","name":"nu-openshift-cluster","vendor":"Kubernetes","dome9CloudAccountId":"5af13ab5-72ed-43b6-9544-33c9236d62f0","organizationalUnitId":"00000000-0000-0000-0000-000000000000","organizationalUnitPath":""},"region":"Global","entity":{"spec":{"affinity":null,"containers":[{"args":null,"command":["/bin/bash","-c","#/bin/bash\nsigterm_handler()\n{\n  if pid=$(pgrep -o keepalived); then\n    kill -s SIGTERM \"$pid\"\n  fi\n}\n\nreload_keepalived()\n{\n  if pid=$(pgrep -o keepalived); then\n      kill -s SIGHUP \"$pid\"\n  else\n      /usr/sbin/keepalived -f /etc/keepalived/keepalived.conf --dont-fork --vrrp --log-detail --log-console &\n  fi\n}\n\nmsg_handler()\n{\n  while read -r line; do\n    echo \"The client sent: $line\" >&2\n    # currently only 'reload' msg is supported\n    if [ \"$line\" = reload ]; then\n        reload_keepalived\n    fi\n  done\n}\n\nremove_vip()\n{\n  address=$1\n  interface=$(ip -o a | awk \"/\\s${address}\\// {print \\$2}\")\n  cidr=$(ip -o a | awk \"/\\s${address}\\// {print \\$4}\")\n  if [ -n \"$interface\" ]; then\n      ip a del $cidr dev $interface\n  fi\n}\n\nset -ex\n# Ensure that we don't have stale VIPs configured\n# See https://bugzilla.redhat.com/show_bug.cgi?id=1931505\nremove_vip \"192.168.10.17\"\nremove_vip \"192.168.10.18\"\ndeclare -r keepalived_sock=\"/var/run/keepalived/keepalived.sock\"\nexport -f msg_handler\nexport -f reload_keepalived\nexport -f sigterm_handler\n\ntrap sigterm_handler SIGTERM\nif [ -s \"/etc/keepalived/keepalived.conf\" ]; then\n    /usr/sbin/keepalived -f /etc/keepalived/keepalived.conf --dont-fork --vrrp --log-detail --log-console &\nfi\n\nrm -f \"$keepalived_sock\"\nsocat UNIX-LISTEN:${keepalived_sock},fork system:'bash -c msg_handler'\n"],"env":[{"name":"NSS_SDB_USE_CACHE","value":"no","valueFrom":null}],"image":"quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:bb053ad62f77bf465b6e272a4f1aa057b94436df3f5734fc756ecfd5f29fc64f","livenessProbe":{"exec":{"command":["/bin/bash","-c","[ ! -s \"/etc/keepalived/keepalived.conf\" ] || (echo \"State = FAULT\" > /tmp/keepalived.data && kill -s SIGUSR1 \"$(pgrep -o keepalived)\" && for i in $(seq 5); do grep -q \"State = FAULT\" /tmp/keepalived.data && sleep 1 || exit 0; done && exit 1)\n"]},"failureThreshold":3,"httpGet":null,"initialDelaySeconds":20,"periodSeconds":10,"successThreshold":1,"tcpSocket":null,"timeoutSeconds":5},"name":"keepalived","imageDetails":{"registry":"quay.io/openshift-release-dev","repository":"ocp-v4.0-art-dev","tag":"sha256:bb053ad62f77bf465b6e272a4f1aa057b94436df3f5734fc756ecfd5f29fc64f"},"parsedArgs":[{"key":"c","value":"#/bin/bashsigterm_handler(){  if pid=$(pgrep"},{"key":"o","value":"keepalived); then    kill"},{"key":"s","value":"SIGTERM \"$pid\"  fi}reload_keepalived(){  if pid=$(pgrep"},{"key":"o","value":"keepalived); then      kill"},{"key":"s","value":"SIGHUP \"$pid\"  else      /usr/sbin/keepalived"},{"key":"f","value":"/etc/keepalived/keepalived.conf"},{"key":"log-console","value":"&  fi}msg_handler(){  while read"},{"key":"r","value":"line; do    echo \"The client sent: $line\" >&2    # currently only 'reload' msg is supported    if [ \"$line\" = reload ]; then        reload_keepalived    fi  done}remove_vip(){  address=$1  interface=$(ip"},{"key":"o","value":"a | awk \"/\\s${address}\\// {print \\$2}\")  cidr=$(ip"},{"key":"o","value":"a | awk \"/\\s${address}\\// {print \\$4}\")  if ["},{"key":"n","value":"\"$interface\" ]; then      ip a del $cidr dev $interface  fi}set"},{"key":"ex\n#","value":"Ensure that we don't have stale VIPs configured# See https://bugzilla.redhat.com/show_bug.cgi?id=1931505remove_vip \"192.168.10.17\"remove_vip \"192.168.10.18\"declare"},{"key":"r","value":"keepalived_sock=\"/var/run/keepalived/keepalived.sock\"export"},{"key":"f","value":"msg_handlerexport"},{"key":"f","value":"reload_keepalivedexport"},{"key":"f","value":"sigterm_handlertrap sigterm_handler SIGTERMif ["},{"key":"s","value":"\"/etc/keepalived/keepalived.conf\" ]; then    /usr/sbin/keepalived"},{"key":"f","value":"/etc/keepalived/keepalived.conf"},{"key":"log-console","value":"&firm"},{"key":"f","value":"\"$keepalived_sock\"socat UNIX-LISTEN:${keepalived_sock},fork system:'bash"},{"key":"c","value":"msg_handler'"}],"ports":null,"readinessProbe":null,"resources":{"limits":null,"requests":{"memory":"200Mi","cpu":"100m"}},"securityContext":{"allowPrivilegeEscalation":null,"capabilities":null,"privileged":true,"procMount":null,"readOnlyRootFilesystem":null,"runAsGroup":null,"runAsNonRoot":null,"runAsUser":null,"seLinuxOptions":null,"windowsOptions":null,"seccompProfile":null},"volumeMounts":[{"name":"conf-dir","mountPath":"/etc/keepalived","readOnly":false,"mountPropagation":null,"subPath":null,"subPathExpr":null},{"name":"run-dir","mountPath":"/var/run/keepalived","readOnly":false,"mountPropagation":null,"subPath":null,"subPathExpr":null},{"name":"chroot-host","mountPath":"/host","readOnly":false,"mountPropagation":null,"subPath":null,"subPathExpr":null},{"name":"kubeconfigvarlib","mountPath":"/var/lib/kubelet","readOnly":false,"mountPropagation":null,"subPath":null,"subPathExpr":null}]},{"args":null,"command":["dynkeepalived","/var/lib/kubelet/kubeconfig","/config/keepalived.conf.tmpl","/etc/keepalived/keepalived.conf","--api-vip","192.168.10.17","--ingress-vip","192.168.10.18"],"env":[{"name":"ENABLE_UNICAST","value":"yes","valueFrom":null},{"name":"IS_BOOTSTRAP","value":"no","valueFrom":null}],"image":"quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1e747154a68ae161551581454ef86237b20192bd0ebf72a7ea4e4b8a9ab0f242","livenessProbe":null,"name":"keepalived-monitor","imageDetails":{"registry":"quay.io/openshift-release-dev","repository":"ocp-v4.0-art-dev","tag":"sha256:1e747154a68ae161551581454ef86237b20192bd0ebf72a7ea4e4b8a9ab0f242"},"parsedArgs":[{"key":"api-vip","value":"192.168.10.17"},{"key":"ingress-vip","value":"192.168.10.18"}],"ports":null,"readinessProbe":null,"resources":{"limits":null,"requests":{"memory":"200Mi","cpu":"100m"}},"securityContext":{"allowPrivilegeEscalation":null,"capabilities":null,"privileged":true,"procMount":null,"readOnlyRootFilesystem":null,"runAsGroup":null,"runAsNonRoot":null,"runAsUser":null,"seLinuxOptions":null,"windowsOptions":null,"seccompProfile":null},"volumeMounts":[{"name":"resource-dir","mountPath":"/config","readOnly":false,"mountPropagation":null,"subPath":null,"subPathExpr":null},{"name":"kubeconfigvarlib","mountPath":"/var/lib/kubelet","readOnly":false,"mountPropagation":null,"subPath":null,"subPathExpr":null},{"name":"conf-dir","mountPath":"/etc/keepalived","readOnly":false,"mountPropagation":null,"subPath":null,"subPathExpr":null},{"name":"run-dir","mountPath":"/var/run/keepalived","readOnly":false,"mountPropagation":null,"subPath":null,"subPathExpr":null},{"name":"chroot-host","mountPath":"/host","readOnly":false,"mountPropagation":null,"subPath":null,"subPathExpr":null}]}],"dnsConfig":null,"hostAliases":null,"hostIPC":false,"hostNetwork":true,"hostPID":false,"initContainers":[{"args":null,"command":["runtimecfg","render","/etc/kubernetes/kubeconfig","--api-vip","192.168.10.17","--ingress-vip","192.168.10.18","/config","--out-dir","/etc/keepalived"],"env":null,"image":"quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1e747154a68ae161551581454ef86237b20192bd0ebf72a7ea4e4b8a9ab0f242","livenessProbe":null,"name":"render-config-keepalived","imageDetails":{"registry":"quay.io/openshift-release-dev","repository":"ocp-v4.0-art-dev","tag":"sha256:1e747154a68ae161551581454ef86237b20192bd0ebf72a7ea4e4b8a9ab0f242"},"parsedArgs":[{"key":"api-vip","value":"192.168.10.17"},{"key":"ingress-vip","value":"192.168.10.18 /config"},{"key":"out-dir","value":"/etc/keepalived"}],"ports":null,"readinessProbe":null,"resources":{"limits":null,"requests":null},"securityContext":null,"volumeMounts":[{"name":"kubeconfig","mountPath":"/etc/kubernetes","readOnly":false,"mountPropagation":null,"subPath":null,"subPathExpr":null},{"name":"script-dir","mountPath":"/config","readOnly":false,"mountPropagation":null,"subPath":null,"subPathExpr":null},{"name":"conf-dir","mountPath":"/etc/keepalived","readOnly":false,"mountPropagation":null,"subPath":null,"subPathExpr":null}]}],"nodeInfo":{"conditions":[{"message":"kubelet has sufficient memory available","reason":"KubeletHasSufficientMemory","status":"False","type":"MemoryPressure"},{"message":"kubelet has no disk pressure","reason":"KubeletHasNoDiskPressure","status":"False","type":"DiskPressure"},{"message":"kubelet has sufficient PID available","reason":"KubeletHasSufficientPID","status":"False","type":"PIDPressure"},{"message":"kubelet is posting ready status","reason":"KubeletReady","status":"True","type":"Ready"}],"labels":[{"key":"beta.kubernetes.io/arch","value":"amd64"},{"key":"beta.kubernetes.io/os","value":"linux"},{"key":"kubernetes.io/arch","value":"amd64"},{"key":"kubernetes.io/hostname","value":"worker-2.demoenv.local"},{"key":"kubernetes.io/os","value":"linux"},{"key":"node-role.kubernetes.io/worker","value":""},{"key":"node.openshift.io/os_id","value":"rhcos"}]},"nodeName":"worker-2.demoenv.local","priority":2000001000,"priorityClassName":"system-node-critical","securityContext":{"fsGroup":null,"runAsGroup":null,"runAsNonRoot":null,"runAsUser":null,"seLinuxOptions":null,"supplementalGroups":null,"sysctls":null,"windowsOptions":null,"seccompProfile":null},"serviceAccount":null,"serviceAccountName":null,"tolerations":[{"key":null,"operator":"Exists","effect":null}],"volumes":[{"hostPath":{"path":"/etc/kubernetes/static-pod-resources/keepalived","type":""},"flexVolume":null,"name":"resource-dir","persistentVolumeClaim":null},{"hostPath":{"path":"/etc/kubernetes/static-pod-resources/keepalived/scripts","type":""},"flexVolume":null,"name":"script-dir","persistentVolumeClaim":null},{"hostPath":{"path":"/etc/kubernetes","type":""},"flexVolume":null,"name":"kubeconfig","persistentVolumeClaim":null},{"hostPath":{"path":"/var/lib/kubelet","type":""},"flexVolume":null,"name":"kubeconfigvarlib","persistentVolumeClaim":null},{"hostPath":{"path":"/etc/keepalived","type":""},"flexVolume":null,"name":"conf-dir","persistentVolumeClaim":null},{"hostPath":null,"flexVolume":null,"name":"run-dir","persistentVolumeClaim":null},{"hostPath":{"path":"/","type":""},"flexVolume":null,"name":"chroot-host","persistentVolumeClaim":null}]},"status":{"phase":"Running","podIP":"192.168.10.15"},"networkPolicies":{"ingress":[],"egress":[]},"owner":{"ownerReferences":[{"kind":"Node","uid":"06180758-e294-416a-8317-fdd913607d6a","name":"worker-2.demoenv.local"}],"rootOwner":{"kind":"Node","uid":"06180758-e294-416a-8317-fdd913607d6a","name":"worker-2.demoenv.local"}},"tags":[{"key":"app","value":"kni-infra-vrrp"}],"namespace":"openshift-kni-infra","annotations":[{"key":"kubernetes.io/config.hash","value":"35b520fce1bae4a370efc3fa35c564f6"},{"key":"kubernetes.io/config.mirror","value":"35b520fce1bae4a370efc3fa35c564f6"},{"key":"kubernetes.io/config.seen","value":"2022-12-21T04:48:02.320351781Z"},{"key":"kubernetes.io/config.source","value":"file"},{"key":"openshift.io/scc","value":"privileged"}],"labels":[{"key":"app","value":"kni-infra-vrrp"}],"creationTime":1671598150,"id":"2a0d1dec-f6d4-4a22-9d36-ffdc060d902d","type":"KubernetesPod","name":"keepalived-worker-2.demoenv.local","dome9Id":"11|5af13ab5-72ed-43b6-9544-33c9236d62f0|Pod|2a0d1dec-f6d4-4a22-9d36-ffdc060d902d","accountNumber":"5af13ab5-72ed-43b6-9544-33c9236d62f0","assetLabels":null,"region":"Global","externalFindings":null},"remediationActions":[],"action":"Detect","additionalFields":[]}