{"status":"Failed","policy":{"name":"Webhooks","description":""},"findingKey":"BOd7A9Bcfw0KW9CkUAYVTw","findingId":"BOd7A9Bcfw0KW9CkUAYVTw","cloudGuardAccountId":"51722","origin":"Compliance Engine","bundle":{"name":"CIS Kubernetes Benchmark v1.6.1","description":"Automated Validation of Kubernetes CIS Benchmark v1.6.1 Prescriptive guidance for establishing a secure configuration posture for Kubernetes 1.6.1\nFor additional reference: https://www.cisecurity.org/benchmark/kubernetes/","id":-70},"reportTime":"2023-06-09T11:00:31.243Z","rule":{"name":"Ensure that the seccomp profile is set to docker/default in your pod definitions","ruleId":"D9.K8S.IAM.21","description":"Seccomp (secure computing mode) is used to restrict the set of system calls applications can make, allowing cluster administrators greater control over the security of workloads running in the cluster. Kubernetes disables seccomp profiles by default for historical reasons. You should enable it to ensure that the workloads have restricted actions available within the container.","remediation":"Use security context to enable the docker/default seccomp profile in your pod definitions.\n\n**References**\n1. https://github.com/kubernetes/kubernetes/issues/39845\n2. https://github.com/kubernetes/kubernetes/pull/21790\n3. https://github.com/kubernetes/community/blob/master/contributors/design-proposals/seccomp.md#examples\n4. https://docs.docker.com/engine/security/seccomp/","complianceTags":"5.6.2","logicHash":"wat89y5RGQIVJriupbowlQ","severity":"High"},"account":{"id":"5af13ab5-72ed-43b6-9544-33c9236d62f0","name":"nu-openshift-cluster","vendor":"Kubernetes","dome9CloudAccountId":"5af13ab5-72ed-43b6-9544-33c9236d62f0","organizationalUnitId":"00000000-0000-0000-0000-000000000000","organizationalUnitPath":""},"region":"Global","entity":{"spec":{"affinity":{"nodeAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":null,"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":null,"matchFields":[{"key":"metadata.name","operator":"In","values":["control-2.demoenv.local"]}]}]}},"podAffinity":null,"podAntiAffinity":null},"containers":[{"args":["trap : TERM INT; sleep infinity & wait\n"],"command":["/bin/bash","-ec","--"],"env":null,"image":"quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:6c99d61b704589581b000dc6dd224449caf9419879e49af19ccfae10831d9cea","livenessProbe":null,"name":"kube-multus-additional-cni-plugins","imageDetails":{"registry":"quay.io/openshift-release-dev","repository":"ocp-v4.0-art-dev","tag":"sha256:6c99d61b704589581b000dc6dd224449caf9419879e49af19ccfae10831d9cea"},"parsedArgs":[{"key":"","value":"trap : TERM INT; sleep infinity & wait"}],"ports":null,"readinessProbe":null,"resources":{"limits":null,"requests":{"memory":"10Mi","cpu":"10m"}},"securityContext":{"allowPrivilegeEscalation":null,"capabilities":null,"privileged":true,"procMount":null,"readOnlyRootFilesystem":null,"runAsGroup":null,"runAsNonRoot":null,"runAsUser":null,"seLinuxOptions":null,"windowsOptions":null,"seccompProfile":null},"volumeMounts":[{"name":"kube-api-access-p862x","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"mountPropagation":null,"subPath":null,"subPathExpr":null}]}],"dnsConfig":null,"hostAliases":null,"hostIPC":false,"hostNetwork":true,"hostPID":false,"initContainers":[{"args":null,"command":["/entrypoint/cnibincopy.sh"],"env":[{"name":"RHEL7_SOURCE_DIRECTORY","value":"/usr/src/egress-router-cni/rhel7/bin/","valueFrom":null},{"name":"RHEL8_SOURCE_DIRECTORY","value":"/usr/src/egress-router-cni/rhel8/bin/","valueFrom":null},{"name":"DEFAULT_SOURCE_DIRECTORY","value":"/usr/src/egress-router-cni/bin/","valueFrom":null}],"image":"quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8adaa53f43c5257d1d4a02f2b880bd63430908f2286bc97f323f42a7cf9166bd","livenessProbe":null,"name":"egress-router-binary-copy","imageDetails":{"registry":"quay.io/openshift-release-dev","repository":"ocp-v4.0-art-dev","tag":"sha256:8adaa53f43c5257d1d4a02f2b880bd63430908f2286bc97f323f42a7cf9166bd"},"parsedArgs":[],"ports":null,"readinessProbe":null,"resources":{"limits":null,"requests":null},"securityContext":null,"volumeMounts":[{"name":"cni-binary-copy","mountPath":"/entrypoint","readOnly":false,"mountPropagation":null,"subPath":null,"subPathExpr":null},{"name":"cnibin","mountPath":"/host/opt/cni/bin","readOnly":false,"mountPropagation":null,"subPath":null,"subPathExpr":null},{"name":"os-release","mountPath":"/host/etc/os-release","readOnly":true,"mountPropagation":null,"subPath":null,"subPathExpr":null},{"name":"kube-api-access-p862x","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"mountPropagation":null,"subPath":null,"subPathExpr":null}]},{"args":null,"command":["/bin/bash","-c","/entrypoint/cnibincopy.sh && cp /entrypoint/allowlist.conf /host/etc/cni/tuning/"],"env":[{"name":"RHEL7_SOURCE_DIRECTORY","value":"/usr/src/plugins/rhel7/bin/","valueFrom":null},{"name":"RHEL8_SOURCE_DIRECTORY","value":"/usr/src/plugins/rhel8/bin/","valueFrom":null},{"name":"DEFAULT_SOURCE_DIRECTORY","value":"/usr/src/plugins/bin/","valueFrom":null}],"image":"quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:5dae540d3f6e8c54e384ecec150e702b2ed868301066463c8710501b88b125a8","livenessProbe":null,"name":"cni-plugins","imageDetails":{"registry":"quay.io/openshift-release-dev","repository":"ocp-v4.0-art-dev","tag":"sha256:5dae540d3f6e8c54e384ecec150e702b2ed868301066463c8710501b88b125a8"},"parsedArgs":[{"key":"c","value":"/entrypoint/cnibincopy.sh && cp /entrypoint/allowlist.conf /host/etc/cni/tuning/"}],"ports":null,"readinessProbe":null,"resources":{"limits":null,"requests":null},"securityContext":null,"volumeMounts":[{"name":"cni-binary-copy","mountPath":"/entrypoint","readOnly":false,"mountPropagation":null,"subPath":null,"subPathExpr":null},{"name":"cnibin","mountPath":"/host/opt/cni/bin","readOnly":false,"mountPropagation":null,"subPath":null,"subPathExpr":null},{"name":"os-release","mountPath":"/host/etc/os-release","readOnly":true,"mountPropagation":null,"subPath":null,"subPathExpr":null},{"name":"tuning-conf-dir","mountPath":"/host/etc/cni/tuning/","readOnly":false,"mountPropagation":null,"subPath":null,"subPathExpr":null},{"name":"kube-api-access-p862x","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"mountPropagation":null,"subPath":null,"subPathExpr":null}]},{"args":null,"command":["/entrypoint/cnibincopy.sh"],"env":[{"name":"RHEL7_SOURCE_DIRECTORY","value":"/bondcni/rhel7/","valueFrom":null},{"name":"RHEL8_SOURCE_DIRECTORY","value":"/bondcni/rhel8/","valueFrom":null},{"name":"DEFAULT_SOURCE_DIRECTORY","value":"/bondcni/","valueFrom":null}],"image":"quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a0c130954dbb465f1c7ab3095bbe964f865cf29adede61a0a48511eb15ededd8","livenessProbe":null,"name":"bond-cni-plugin","imageDetails":{"registry":"quay.io/openshift-release-dev","repository":"ocp-v4.0-art-dev","tag":"sha256:a0c130954dbb465f1c7ab3095bbe964f865cf29adede61a0a48511eb15ededd8"},"parsedArgs":[],"ports":null,"readinessProbe":null,"resources":{"limits":null,"requests":null},"securityContext":null,"volumeMounts":[{"name":"cni-binary-copy","mountPath":"/entrypoint","readOnly":false,"mountPropagation":null,"subPath":null,"subPathExpr":null},{"name":"cnibin","mountPath":"/host/opt/cni/bin","readOnly":false,"mountPropagation":null,"subPath":null,"subPathExpr":null},{"name":"os-release","mountPath":"/host/etc/os-release","readOnly":true,"mountPropagation":null,"subPath":null,"subPathExpr":null},{"name":"kube-api-access-p862x","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"mountPropagation":null,"subPath":null,"subPathExpr":null}]},{"args":null,"command":["/entrypoint/cnibincopy.sh"],"env":[{"name":"RHEL7_SOURCE_DIRECTORY","value":"/usr/src/route-override/rhel7/bin/","valueFrom":null},{"name":"RHEL8_SOURCE_DIRECTORY","value":"/usr/src/whereabouts/rhel8/bin/","valueFrom":null},{"name":"DEFAULT_SOURCE_DIRECTORY","value":"/usr/src/route-override/bin/","valueFrom":null}],"image":"quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a189a80a8dd46629637615857b83d8a03bf359e328678619ad96f9a4e15a3e25","livenessProbe":null,"name":"routeoverride-cni","imageDetails":{"registry":"quay.io/openshift-release-dev","repository":"ocp-v4.0-art-dev","tag":"sha256:a189a80a8dd46629637615857b83d8a03bf359e328678619ad96f9a4e15a3e25"},"parsedArgs":[],"ports":null,"readinessProbe":null,"resources":{"limits":null,"requests":null},"securityContext":null,"volumeMounts":[{"name":"cni-binary-copy","mountPath":"/entrypoint","readOnly":false,"mountPropagation":null,"subPath":null,"subPathExpr":null},{"name":"cnibin","mountPath":"/host/opt/cni/bin","readOnly":false,"mountPropagation":null,"subPath":null,"subPathExpr":null},{"name":"os-release","mountPath":"/host/etc/os-release","readOnly":true,"mountPropagation":null,"subPath":null,"subPathExpr":null},{"name":"kube-api-access-p862x","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"mountPropagation":null,"subPath":null,"subPathExpr":null}]},{"args":null,"command":["/entrypoint/cnibincopy.sh"],"env":[{"name":"RHEL7_SOURCE_DIRECTORY","value":"/usr/src/whereabouts/rhel7/bin/","valueFrom":null},{"name":"RHEL8_SOURCE_DIRECTORY","value":"/usr/src/whereabouts/rhel8/bin/","valueFrom":null},{"name":"DEFAULT_SOURCE_DIRECTORY","value":"/usr/src/whereabouts/bin/","valueFrom":null}],"image":"quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:d514369668723ab4ab137de35dacedc96bd30909f205ca0f302be367c8526c17","livenessProbe":null,"name":"whereabouts-cni-bincopy","imageDetails":{"registry":"quay.io/openshift-release-dev","repository":"ocp-v4.0-art-dev","tag":"sha256:d514369668723ab4ab137de35dacedc96bd30909f205ca0f302be367c8526c17"},"parsedArgs":[],"ports":null,"readinessProbe":null,"resources":{"limits":null,"requests":{"memory":"10Mi","cpu":"10m"}},"securityContext":null,"volumeMounts":[{"name":"cni-binary-copy","mountPath":"/entrypoint","readOnly":false,"mountPropagation":null,"subPath":null,"subPathExpr":null},{"name":"cnibin","mountPath":"/host/opt/cni/bin","readOnly":false,"mountPropagation":null,"subPath":null,"subPathExpr":null},{"name":"os-release","mountPath":"/host/etc/os-release","readOnly":true,"mountPropagation":null,"subPath":null,"subPathExpr":null},{"name":"kube-api-access-p862x","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"mountPropagation":null,"subPath":null,"subPathExpr":null}]},{"args":null,"command":["/bin/sh","-c","#!/bin/sh\n\nset -u -e\n\nCNI_BIN_DIR=${CNI_BIN_DIR:-\"/host/opt/cni/bin/\"}\nWHEREABOUTS_KUBECONFIG_FILE_HOST=${WHEREABOUTS_KUBECONFIG_FILE_HOST:-\"/etc/cni/net.d/whereabouts.d/whereabouts.kubeconfig\"}\nCNI_CONF_DIR=${CNI_CONF_DIR:-\"/host/etc/cni/net.d\"}\n\n# Make a whereabouts.d directory (for our kubeconfig)\n\nmkdir -p $CNI_CONF_DIR/whereabouts.d\nWHEREABOUTS_KUBECONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.kubeconfig\nWHEREABOUTS_GLOBALCONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.conf\n\n# ------------------------------- Generate a \"kube-config\"\nSERVICE_ACCOUNT_PATH=/var/run/secrets/kubernetes.io/serviceaccount\nKUBE_CA_FILE=${KUBE_CA_FILE:-$SERVICE_ACCOUNT_PATH/ca.crt}\nSERVICEACCOUNT_TOKEN=$(cat $SERVICE_ACCOUNT_PATH/token)\nSKIP_TLS_VERIFY=${SKIP_TLS_VERIFY:-false}\n\n\n# Check if we're running as a k8s pod.\nif [ -f \"$SERVICE_ACCOUNT_PATH/token\" ]; then\n  # We're running as a k8d pod - expect some variables.\n  if [ -z ${KUBERNETES_SERVICE_HOST} ]; then\n    error \"KUBERNETES_SERVICE_HOST not set\"; exit 1;\n  fi\n  if [ -z ${KUBERNETES_SERVICE_PORT} ]; then\n    error \"KUBERNETES_SERVICE_PORT not set\"; exit 1;\n  fi\n\n  if [ \"$SKIP_TLS_VERIFY\" == \"true\" ]; then\n    TLS_CFG=\"insecure-skip-tls-verify: true\"\n  elif [ -f \"$KUBE_CA_FILE\" ]; then\n    TLS_CFG=\"certificate-authority-data: $(cat $KUBE_CA_FILE | base64 | tr -d '\\n')\"\n  fi\n\n  # Write a kubeconfig file for the CNI plugin.  Do this\n  # to skip TLS verification for now.  We should eventually support\n  # writing more complete kubeconfig files. This is only used\n  # if the provided CNI network config references it.\n  touch $WHEREABOUTS_KUBECONFIG\n  chmod ${KUBECONFIG_MODE:-600} $WHEREABOUTS_KUBECONFIG\n  cat > $WHEREABOUTS_KUBECONFIG <<EOF\n# Kubeconfig file for Multus CNI plugin.\napiVersion: v1\nkind: Config\nclusters:\n- name: local\n  cluster:\n    server: ${KUBERNETES_SERVICE_PROTOCOL:-https}://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}\n    $TLS_CFG\nusers:\n- name: whereabouts\n  user:\n    token: \"${SERVICEACCOUNT_TOKEN}\"\ncontexts:\n- name: whereabouts-context\n  context:\n    cluster: local\n    user: whereabouts\n    namespace: ${WHEREABOUTS_NAMESPACE}\ncurrent-context: whereabouts-context\nEOF\n\n# Kubeconfig file for Multus CNI plugin.\ncat > $WHEREABOUTS_GLOBALCONFIG <<EOF\n{\n  \"datastore\": \"kubernetes\",\n  \"kubernetes\": {\n    \"kubeconfig\": \"/etc/kubernetes/cni/net.d/whereabouts.d/whereabouts.kubeconfig\"\n  },\n  \"log_level\": \"debug\"\n}\nEOF\n\nelse\n  warn \"Doesn't look like we're running in a kubernetes environment (no serviceaccount token)\"\nfi\n\n# copy whereabouts to the cni bin dir\n# SKIPPED DUE TO FIPS COPY.\n# cp -f /whereabouts $CNI_BIN_DIR\n\n# ---------------------- end Generate a \"kube-config\".\n\n# Unless told otherwise, sleep forever.\n# This prevents Kubernetes from restarting the pod repeatedly.\nshould_sleep=${SLEEP:-\"true\"}\necho \"Done configuring CNI.  Sleep=$should_sleep\"\nwhile [ \"$should_sleep\" == \"true\"  ]; do\n    sleep 1000000000000\ndone\n"],"env":[{"name":"KUBERNETES_SERVICE_PORT","value":"6443","valueFrom":null},{"name":"KUBERNETES_SERVICE_HOST","value":"api-int.openshift-csa.demoenv.local","valueFrom":null},{"name":"CNI_BIN_DIR","value":"/host/opt/cni/bin/","valueFrom":null},{"name":"CNI_CONF_DIR","value":"/host/etc/cni/net.d","valueFrom":null},{"name":"SLEEP","value":"false","valueFrom":null},{"name":"WHEREABOUTS_NAMESPACE","value":"openshift-multus","valueFrom":null}],"image":"quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:d514369668723ab4ab137de35dacedc96bd30909f205ca0f302be367c8526c17","livenessProbe":null,"name":"whereabouts-cni","imageDetails":{"registry":"quay.io/openshift-release-dev","repository":"ocp-v4.0-art-dev","tag":"sha256:d514369668723ab4ab137de35dacedc96bd30909f205ca0f302be367c8526c17"},"parsedArgs":[{"key":"c","value":"#!/bin/shset"},{"key":"e\n\nCNI_BIN_DIR","value":"${CNI_BIN_DIR:-\"/host/opt/cni/bin/\"}WHEREABOUTS_KUBECONFIG_FILE_HOST=${WHEREABOUTS_KUBECONFIG_FILE_HOST:-\"/etc/cni/net.d/whereabouts.d/whereabouts.kubeconfig\"}CNI_CONF_DIR=${CNI_CONF_DIR:-\"/host/etc/cni/net.d\"}# Make a whereabouts.d directory (for our kubeconfig)mkdir"},{"key":"p","value":"$CNI_CONF_DIR/whereabouts.dWHEREABOUTS_KUBECONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.kubeconfigWHEREABOUTS_GLOBALCONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.conf#"},{"key":"","value":"Generate a \"kube-config\"SERVICE_ACCOUNT_PATH=/var/run/secrets/kubernetes.io/serviceaccountKUBE_CA_FILE=${KUBE_CA_FILE:-$SERVICE_ACCOUNT_PATH/ca.crt}SERVICEACCOUNT_TOKEN=$(cat $SERVICE_ACCOUNT_PATH/token)SKIP_TLS_VERIFY=${SKIP_TLS_VERIFY:-false}# Check if we're running as a k8s pod.if ["},{"key":"f","value":"\"$SERVICE_ACCOUNT_PATH/token\" ]; then  # We're running as a k8d pod"},{"key":"","value":"expect some variables.  if ["},{"key":"z","value":"${KUBERNETES_SERVICE_HOST} ]; then    error \"KUBERNETES_SERVICE_HOST not set\"; exit 1;  fi  if ["},{"key":"z","value":"${KUBERNETES_SERVICE_PORT} ]; then    error \"KUBERNETES_SERVICE_PORT not set\"; exit 1;  fi  if [ \"$SKIP_TLS_VERIFY\" == \"true\" ]; then    TLS_CFG=\"insecure-skip-tls-verify: true\"  elif ["},{"key":"f","value":"\"$KUBE_CA_FILE\" ]; then    TLS_CFG=\"certificate-authority-data: $(cat $KUBE_CA_FILE | base64 | tr"},{"key":"d","value":"'\\n')\"  fi  # Write a kubeconfig file for the CNI plugin.  Do this  # to skip TLS verification for now.  We should eventually support  # writing more complete kubeconfig files. This is only used  # if the provided CNI network config references it.  touch $WHEREABOUTS_KUBECONFIG  chmod ${KUBECONFIG_MODE:-600} $WHEREABOUTS_KUBECONFIG  cat > $WHEREABOUTS_KUBECONFIG <<EOF# Kubeconfig file for Multus CNI plugin.apiVersion: v1kind: Configclusters:- name: local  cluster:    server: ${KUBERNETES_SERVICE_PROTOCOL:-https}://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}    $TLS_CFGusers:- name: whereabouts  user:    token: \"${SERVICEACCOUNT_TOKEN}\"contexts:- name: whereabouts-context  context:    cluster: local    user: whereabouts    namespace: ${WHEREABOUTS_NAMESPACE}current-context: whereabouts-contextEOF# Kubeconfig file for Multus CNI plugin.cat > $WHEREABOUTS_GLOBALCONFIG <<EOF{  \"datastore\": \"kubernetes\",  \"kubernetes\": {    \"kubeconfig\": \"/etc/kubernetes/cni/net.d/whereabouts.d/whereabouts.kubeconfig\"  },  \"log_level\": \"debug\"}EOFelse  warn \"Doesn't look like we're running in a kubernetes environment (no serviceaccount token)\"fi# copy whereabouts to the cni bin dir# SKIPPED DUE TO FIPS COPY.# cp"},{"key":"f","value":"/whereabouts $CNI_BIN_DIR#"},{"key":"","value":"end Generate a \"kube-config\".# Unless told otherwise, sleep forever.# This prevents Kubernetes from restarting the pod repeatedly.should_sleep=${SLEEP:-\"true\"}echo \"Done configuring CNI.  Sleep=$should_sleep\"while [ \"$should_sleep\" == \"true\"  ]; do    sleep 1000000000000done"}],"ports":null,"readinessProbe":null,"resources":{"limits":null,"requests":{"memory":"10Mi","cpu":"10m"}},"securityContext":null,"volumeMounts":[{"name":"cnibin","mountPath":"/host/opt/cni/bin","readOnly":false,"mountPropagation":null,"subPath":null,"subPathExpr":null},{"name":"system-cni-dir","mountPath":"/host/etc/cni/net.d","readOnly":false,"mountPropagation":null,"subPath":null,"subPathExpr":null},{"name":"kube-api-access-p862x","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"mountPropagation":null,"subPath":null,"subPathExpr":null}]}],"nodeInfo":{"conditions":[{"message":"kubelet has sufficient memory available","reason":"KubeletHasSufficientMemory","status":"False","type":"MemoryPressure"},{"message":"kubelet has no disk pressure","reason":"KubeletHasNoDiskPressure","status":"False","type":"DiskPressure"},{"message":"kubelet has sufficient PID available","reason":"KubeletHasSufficientPID","status":"False","type":"PIDPressure"},{"message":"kubelet is posting ready status","reason":"KubeletReady","status":"True","type":"Ready"}],"labels":[{"key":"beta.kubernetes.io/arch","value":"amd64"},{"key":"beta.kubernetes.io/os","value":"linux"},{"key":"kubernetes.io/arch","value":"amd64"},{"key":"kubernetes.io/hostname","value":"control-2.demoenv.local"},{"key":"kubernetes.io/os","value":"linux"},{"key":"node-role.kubernetes.io/master","value":""},{"key":"node.openshift.io/os_id","value":"rhcos"}]},"nodeName":"control-2.demoenv.local","priority":2000001000,"priorityClassName":"system-node-critical","securityContext":{"fsGroup":null,"runAsGroup":null,"runAsNonRoot":null,"runAsUser":null,"seLinuxOptions":null,"supplementalGroups":null,"sysctls":null,"windowsOptions":null,"seccompProfile":null},"serviceAccount":"multus","serviceAccountName":"multus","tolerations":[{"key":null,"operator":"Exists","effect":null}],"volumes":[{"hostPath":{"path":"/etc/kubernetes/cni/net.d","type":""},"flexVolume":null,"name":"system-cni-dir","persistentVolumeClaim":null},{"hostPath":{"path":"/var/run/multus/cni/net.d","type":""},"flexVolume":null,"name":"multus-cni-dir","persistentVolumeClaim":null},{"hostPath":{"path":"/var/lib/cni/bin","type":""},"flexVolume":null,"name":"cnibin","persistentVolumeClaim":null},{"hostPath":{"path":"/etc/os-release","type":"File"},"flexVolume":null,"name":"os-release","persistentVolumeClaim":null},{"hostPath":null,"flexVolume":null,"name":"cni-binary-copy","persistentVolumeClaim":null},{"hostPath":{"path":"/etc/cni/tuning/","type":"DirectoryOrCreate"},"flexVolume":null,"name":"tuning-conf-dir","persistentVolumeClaim":null},{"hostPath":null,"flexVolume":null,"name":"kube-api-access-p862x","persistentVolumeClaim":null}]},"status":{"phase":"Running","podIP":"192.168.10.12"},"networkPolicies":{"ingress":[],"egress":[]},"owner":{"ownerReferences":[{"kind":"DaemonSet","uid":"4cf3bc74-3070-470d-a08b-2503f05bf9a3","name":"multus-additional-cni-plugins"}],"rootOwner":{"kind":"DaemonSet","uid":"4cf3bc74-3070-470d-a08b-2503f05bf9a3","name":"multus-additional-cni-plugins"}},"tags":[{"key":"app","value":"multus-additional-cni-plugins"},{"key":"component","value":"network"},{"key":"controller-revision-hash","value":"cd74896bd"},{"key":"openshift.io/component","value":"network"},{"key":"pod-template-generation","value":"2"},{"key":"type","value":"infra"}],"namespace":"openshift-multus","annotations":[],"labels":[{"key":"app","value":"multus-additional-cni-plugins"},{"key":"component","value":"network"},{"key":"controller-revision-hash","value":"cd74896bd"},{"key":"openshift.io/component","value":"network"},{"key":"pod-template-generation","value":"2"},{"key":"type","value":"infra"}],"creationTime":1671597097,"id":"5894c54b-d35c-42a1-a49c-5d6a0b785858","type":"KubernetesPod","name":"multus-additional-cni-plugins-bcrmw","dome9Id":"11|5af13ab5-72ed-43b6-9544-33c9236d62f0|Pod|5894c54b-d35c-42a1-a49c-5d6a0b785858","accountNumber":"5af13ab5-72ed-43b6-9544-33c9236d62f0","assetLabels":null,"region":"Global","externalFindings":null},"remediationActions":[],"action":"Detect","additionalFields":[]}